Introducing contestants...
* Player 1, weighing 71 bytes, "Back" ("sebc") !
* Player 2, weighing 28 bytes, "zork" ("just a basic living prog") !
P    1 | live -1
P    2 | sti r1 20 0
       | -> store to 20 + 0 = 20 (with pc and mod 2068)
P    2 | and -2 0 r1
P    1 | ldi 7 1 r1
       | -> load from 7 + 1 = 8 (with pc and mod 13)
P    2 | st r1 -15
P    2 | live 167770880
P    1 | sti r1 67764199 0
       | -> store to 67764199 + 0 = 67764199 (with pc and mod 499)
P    1 | ld 4 r3
P    1 | live 1
P    1 | ld -5 r2
P    1 | ldi 28 -5 r4
       | -> load from 28 + -5 = 23 (with pc and mod 61)
P    1 | sti r4 22 -5
       | -> store to 22 + -5 = 17 (with pc and mod 61)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 67373567 67373567 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 -1 r4
       | -> load from 28 + -1 = 27 (with pc and mod 65)
P    1 | sti r4 22 -1
       | -> store to 22 + -1 = 21 (with pc and mod 65)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor -419146750 -419146750 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 3 r4
       | -> load from 28 + 3 = 31 (with pc and mod 69)
P    1 | sti r4 22 3
       | -> store to 22 + 3 = 25 (with pc and mod 69)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 50462720 50462720 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 7 r4
       | -> load from 28 + 7 = 35 (with pc and mod 73)
P    1 | sti r4 22 7
       | -> store to 22 + 7 = 29 (with pc and mod 73)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 11 r4
       | -> load from 28 + 11 = 39 (with pc and mod 77)
P    1 | sti r4 22 11
       | -> store to 22 + 11 = 33 (with pc and mod 77)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 15 r4
       | -> load from 28 + 15 = 43 (with pc and mod 81)
P    1 | sti r4 22 15
       | -> store to 22 + 15 = 37 (with pc and mod 81)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 19 r4
       | -> load from 28 + 19 = 47 (with pc and mod 85)
P    1 | sti r4 22 19
       | -> store to 22 + 19 = 41 (with pc and mod 85)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 23 r4
       | -> load from 28 + 23 = 51 (with pc and mod 89)
P    1 | sti r4 22 23
       | -> store to 22 + 23 = 45 (with pc and mod 89)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 27 r4
       | -> load from 28 + 27 = 55 (with pc and mod 93)
P    1 | sti r4 22 27
       | -> store to 22 + 27 = 49 (with pc and mod 93)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 31 r4
       | -> load from 28 + 31 = 59 (with pc and mod 97)
P    1 | sti r4 22 31
       | -> store to 22 + 31 = 53 (with pc and mod 97)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 35 r4
       | -> load from 28 + 35 = 63 (with pc and mod 101)
P    1 | sti r4 22 35
       | -> store to 22 + 35 = 57 (with pc and mod 101)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 39 r4
       | -> load from 28 + 39 = 67 (with pc and mod 105)
P    1 | sti r4 22 39
       | -> store to 22 + 39 = 61 (with pc and mod 105)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 43 r4
       | -> load from 28 + 43 = 71 (with pc and mod 109)
P    1 | sti r4 22 43
       | -> store to 22 + 43 = 65 (with pc and mod 109)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 47 r4
       | -> load from 28 + 47 = 75 (with pc and mod 113)
P    1 | sti r4 22 47
       | -> store to 22 + 47 = 69 (with pc and mod 113)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 51 r4
       | -> load from 28 + 51 = 79 (with pc and mod 117)
P    1 | sti r4 22 51
       | -> store to 22 + 51 = 73 (with pc and mod 117)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 55 r4
       | -> load from 28 + 55 = 83 (with pc and mod 121)
P    1 | sti r4 22 55
       | -> store to 22 + 55 = 77 (with pc and mod 121)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 59 r4
       | -> load from 28 + 59 = 87 (with pc and mod 125)
P    1 | sti r4 22 59
       | -> store to 22 + 59 = 81 (with pc and mod 125)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 63 r4
       | -> load from 28 + 63 = 91 (with pc and mod 129)
P    1 | sti r4 22 63
       | -> store to 22 + 63 = 85 (with pc and mod 129)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    1 | zjmp -25 OK
P    1 | ldi 28 67 r4
       | -> load from 28 + 67 = 95 (with pc and mod 133)
P    1 | sti r4 22 67
       | -> store to 22 + 67 = 89 (with pc and mod 133)
P    1 | add r2 r3 r2
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | live -1
P    1 | zjmp -25 OK
P    2 | ldi 7 1 r1
       | -> load from 7 + 1 = 8 (with pc and mod 13)
P    1 | ldi 28 71 r4
       | -> load from 28 + 71 = 99 (with pc and mod 137)
P    2 | sti r1 67764199 0
       | -> store to 67764199 + 0 = 67764199 (with pc and mod 499)
P    2 | ld 4 r3
P    2 | live 1
P    1 | sti r4 22 71
       | -> store to 22 + 71 = 93 (with pc and mod 137)
P    2 | ld -5 r2
P    1 | add r2 r3 r2
P    2 | ldi 28 -5 r4
       | -> load from 28 + -5 = 23 (with pc and mod 61)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 -5
       | -> store to 22 + -5 = 17 (with pc and mod 61)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 75 r4
       | -> load from 28 + 75 = 103 (with pc and mod 141)
P    2 | zjmp -29 FAILED
P    2 | xor 67373567 67373567 r4
P    1 | sti r4 22 75
       | -> store to 22 + 75 = 97 (with pc and mod 141)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 -1 r4
       | -> load from 28 + -1 = 27 (with pc and mod 65)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 -1
       | -> store to 22 + -1 = 21 (with pc and mod 65)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 79 r4
       | -> load from 28 + 79 = 107 (with pc and mod 145)
P    2 | zjmp -29 FAILED
P    2 | xor -419146750 -419146750 r4
P    1 | sti r4 22 79
       | -> store to 22 + 79 = 101 (with pc and mod 145)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 3 r4
       | -> load from 28 + 3 = 31 (with pc and mod 69)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 3
       | -> store to 22 + 3 = 25 (with pc and mod 69)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 83 r4
       | -> load from 28 + 83 = 111 (with pc and mod 149)
P    2 | zjmp -29 FAILED
P    2 | xor 50462720 50462720 r4
P    1 | sti r4 22 83
       | -> store to 22 + 83 = 105 (with pc and mod 149)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 7 r4
       | -> load from 28 + 7 = 35 (with pc and mod 73)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 7
       | -> store to 22 + 7 = 29 (with pc and mod 73)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 87 r4
       | -> load from 28 + 87 = 115 (with pc and mod 153)
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    1 | sti r4 22 87
       | -> store to 22 + 87 = 109 (with pc and mod 153)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 11 r4
       | -> load from 28 + 11 = 39 (with pc and mod 77)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 11
       | -> store to 22 + 11 = 33 (with pc and mod 77)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 91 r4
       | -> load from 28 + 91 = 119 (with pc and mod 157)
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    1 | sti r4 22 91
       | -> store to 22 + 91 = 113 (with pc and mod 157)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 15 r4
       | -> load from 28 + 15 = 43 (with pc and mod 81)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 15
       | -> store to 22 + 15 = 37 (with pc and mod 81)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 95 r4
       | -> load from 28 + 95 = 123 (with pc and mod 161)
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    1 | sti r4 22 95
       | -> store to 22 + 95 = 117 (with pc and mod 161)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 19 r4
       | -> load from 28 + 19 = 47 (with pc and mod 85)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 19
       | -> store to 22 + 19 = 41 (with pc and mod 85)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 99 r4
       | -> load from 28 + 99 = 127 (with pc and mod 165)
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    1 | sti r4 22 99
       | -> store to 22 + 99 = 121 (with pc and mod 165)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 23 r4
       | -> load from 28 + 23 = 51 (with pc and mod 89)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 23
       | -> store to 22 + 23 = 45 (with pc and mod 89)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    1 | ldi 28 103 r4
       | -> load from 28 + 103 = 131 (with pc and mod 169)
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    1 | sti r4 22 103
       | -> store to 22 + 103 = 125 (with pc and mod 169)
P    2 | zjmp -25 OK
P    1 | add r2 r3 r2
P    2 | ldi 28 27 r4
       | -> load from 28 + 27 = 55 (with pc and mod 93)
P    1 | zjmp -29 FAILED
P    1 | xor 0 0 r4
P    2 | sti r4 22 27
       | -> store to 22 + 27 = 49 (with pc and mod 93)
P    1 | zjmp -25 OK
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 31 r4
       | -> load from 28 + 31 = 59 (with pc and mod 97)
P    2 | sti r4 22 31
       | -> store to 22 + 31 = 53 (with pc and mod 97)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 35 r4
       | -> load from 28 + 35 = 63 (with pc and mod 101)
P    2 | sti r4 22 35
       | -> store to 22 + 35 = 57 (with pc and mod 101)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 39 r4
       | -> load from 28 + 39 = 67 (with pc and mod 105)
P    2 | sti r4 22 39
       | -> store to 22 + 39 = 61 (with pc and mod 105)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 43 r4
       | -> load from 28 + 43 = 71 (with pc and mod 109)
P    2 | sti r4 22 43
       | -> store to 22 + 43 = 65 (with pc and mod 109)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 47 r4
       | -> load from 28 + 47 = 75 (with pc and mod 113)
P    2 | sti r4 22 47
       | -> store to 22 + 47 = 69 (with pc and mod 113)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 51 r4
       | -> load from 28 + 51 = 79 (with pc and mod 117)
P    2 | sti r4 22 51
       | -> store to 22 + 51 = 73 (with pc and mod 117)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 55 r4
       | -> load from 28 + 55 = 83 (with pc and mod 121)
P    2 | sti r4 22 55
       | -> store to 22 + 55 = 77 (with pc and mod 121)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 59 r4
       | -> load from 28 + 59 = 87 (with pc and mod 125)
P    2 | sti r4 22 59
       | -> store to 22 + 59 = 81 (with pc and mod 125)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 63 r4
       | -> load from 28 + 63 = 91 (with pc and mod 129)
P    2 | sti r4 22 63
       | -> store to 22 + 63 = 85 (with pc and mod 129)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 67 r4
       | -> load from 28 + 67 = 95 (with pc and mod 133)
P    2 | sti r4 22 67
       | -> store to 22 + 67 = 89 (with pc and mod 133)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 71 r4
       | -> load from 28 + 71 = 99 (with pc and mod 137)
P    2 | sti r4 22 71
       | -> store to 22 + 71 = 93 (with pc and mod 137)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 75 r4
       | -> load from 28 + 75 = 103 (with pc and mod 141)
P    2 | sti r4 22 75
       | -> store to 22 + 75 = 97 (with pc and mod 141)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 79 r4
       | -> load from 28 + 79 = 107 (with pc and mod 145)
P    2 | sti r4 22 79
       | -> store to 22 + 79 = 101 (with pc and mod 145)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
P    2 | ldi 28 83 r4
       | -> load from 28 + 83 = 111 (with pc and mod 149)
P    2 | sti r4 22 83
       | -> store to 22 + 83 = 105 (with pc and mod 149)
P    2 | add r2 r3 r2
P    2 | zjmp -29 FAILED
P    2 | xor 0 0 r4
P    2 | zjmp -25 OK
Contestant 1, "Back", has won !
